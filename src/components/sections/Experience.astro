---
import Section from '../Section.astro'
import { work } from '@cv'
import { Icon } from 'astro-icon/components'
---

<Section className={Astro.props.className} title="Work Experience">
  <ul class="flex flex-col">
    {work.map(({ name, startDate, endDate, position, summary, responsibilities, achievements, url, skills, location, location_type }) => {
      const startYear = new Date(startDate).getFullYear()
      const endYear = endDate != null ? new Date(endDate).getFullYear() : "Present"

      return (
        <li class="relative print:py-2">
          <div data-expanded="false" class="group relative grid pb-1 print:pb-0 transition-all print:grid-cols-1 print:gap-1 sm:grid-cols-12 sm:gap-8 md:gap-6 lg:hover:!opacity-100 expand-container">
            <header class="relative mt-1 text-xs font-semibold sm:col-span-2">
              <time datetime={startDate} data-title={startDate}>{startYear}</time> - <time datetime={endDate} data-title={endDate}>{endYear}</time>
            </header>
            <div class="relative flex flex-col pb-6 print:pb-0 before:-ml-6 sm:col-span-10 before:w-px print:before:hidden before:absolute before:bg-skin-muted before:h-full before:mt-2">
            <div class="absolute w-2 h-2 bg-skin-muted rounded-full mt-2 -translate-x-[1.71rem] ring print:hidden ring-skin-fill"></div>
              <h3>
                <div class="inline-flex items-center text-lg print:text-base leading-tight group/link focus-visible:text-amber-500" aria-label="{position} - {company}">
                  <span>{position} <span>@</span>
                  {url ? (
                    <a class="text-skin-hue" href={url} title={`Ver ${name}`} target="_blank">{name}</a>
                  ) : (
                    <span>{name}</span>
                  )}
                  {url &&
                    <span class="inline-block text-skin-hue print:[&>svg]:hidden">
                      <Icon name="ri:arrow-up-line" class="inline-block w-4 h-4 ml-1 transition-transform translate-y-px shrink-0 group-hover/link:-translate-y-1 group-hover/link:translate-x-1 group-focus-visible/link:-translate-y-1 group-focus-visible/link:translate-x-1 motion-reduce:transition-none rotate-45" aria-hidden="true">
                      </Icon>
                    </span>
                  }
                  </span>
                </div>
              </h3>
              {(location || location_type) && (
                <div class="text-xs text-skin-muted">
                  {location} {location && location_type && '-'} {location_type}
                </div>
              )}
              <div class="mt-4  print:gap-0 flex flex-col gap-4 print:text-xs text-sm">
                {summary && (
                  <div class="flex flex-col gap-1">
                    <h4>Summary:</h4>
                    <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                      {Array.isArray(summary) ? (
                        summary.map(item => (
                          {item}
                        ))
                      ) : (
                        <li>{summary}</li>
                      )}
                    </ul>
                  </div>
                )}

                {(responsibilities || achievements) &&  (
                <div class="after:from-skin-hue dark:after:to-skin-hue/0 flex relative flex-col print:!h-auto gap-4 print:gap-2 after:bg-gradient-to-t after:absolute after:bottom-0 after:w-full print:after:hidden after:h-12 after:content-[''] h-16 group-data-[expanded=true]:after:hidden group-data-[expanded=true]:h-auto overflow-hidden duration-200 ease-out">
                {responsibilities && (
                  <div class="flex flex-col gap-1">
                    <h4>Responsibilities:</h4>
                    <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                      {responsibilities.map(responsibility => (
                        <li>{responsibility}</li>
                      ))}
                    </ul>
                  </div>
                )}

                {achievements && (
                  <div class="flex flex-col gap-1">
                    <h4>Achievements:</h4>
                    <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                      {achievements.map(achievement => (
                        <li>{achievement}</li>
                      ))}
                    </ul>
                  </div>
                )}
                </div>

                <button class="print:hidden group/more w-fit cursor-pointer items-center justify-center gap-1.5 text-xs underline text-skin-muted transition-all hover:text-skin-base flex expand-button">
                  <span class="expand-text">Show More</span>
                  <Icon name="ri:arrow-down-s-line" class="w-4 h-4 group-hover/more:translate-y-0.5 duration-200 ease-out group-data-[expanded=true]:rotate-180" width={24} height={24}></Icon>
                </button>


                <ul class="flex print:hidden flex-wrap gap-2" aria-label="Technologies used">
                  {skills && Object.entries(skills).map(([label, icon]) =>  (
                      <li class="bg-skin-button-accent/20 border-skin-hue/20 text-skin-hue print:p-0 print:bg-transparent print:text-zinc-800 flex gap-1 items-center border-solid print:border-none border rounded-md px-2 py-0.5 text-xs backdrop-blur-sm">
                        {icon && <Icon name={icon} width={16} height={16} />} <span>{label}</span>
                      </li>
                    )
                  )
                  }
                </ul>
)}
              </div>
            </div>
        </div>
        </li>
      )
    })}
  </ul>
</Section>
<script>
  const expandButton = document.querySelectorAll('.expand-button');

  expandButton.forEach(button => {
    button.addEventListener('click', () => {
      const container = button.closest<HTMLElement>('.expand-container')!;
      container.dataset.expanded = container.dataset.expanded === 'true' ? 'false' : 'true';
      const expandText = button.querySelector('.expand-text')!;
      expandText.innerHTML = container.dataset.expanded === 'true' ? 'Show less' : 'Show more'
    });
  });
</script>

<style>
  li::marker {
    @apply text-skin-hue
  }
</style>
